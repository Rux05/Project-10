{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-04T18:05:55.947Z",
    "end": "2024-07-04T18:06:00.516Z",
    "duration": 4569,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a65d6bae-efa3-4db7-8cf1-327da6c2bc86",
      "title": "",
      "fullFile": "cypress\\e2e\\3-tests-API\\api.orders.cy.js",
      "file": "cypress\\e2e\\3-tests-API\\api.orders.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "216d8336-190a-40b3-b0ad-08222c02c061",
          "title": "API orders test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the list of products from the cart",
              "fullTitle": "API orders test should display the list of products from the cart",
              "timedOut": null,
              "duration": 2050,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = localStorage.getItem(\"user\");\ncy.request({\n  method: \"GET\",\n  url: `${UrlApi}/orders`,\n  headers: {\n    Authorization: `Bearer ${authToken}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an(\"object\");\n  expect(response.body).to.have.property(\"orderLines\");\n  expect(response.body.orderLines).to.be.an(\"array\");\n});",
              "err": {},
              "uuid": "c96b6e6b-8019-4f9a-b27b-8714369ba913",
              "parentUUID": "216d8336-190a-40b3-b0ad-08222c02c061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not display the list of products from the cart if not authenticated",
              "fullTitle": "API orders test should not display the list of products from the cart if not authenticated",
              "timedOut": null,
              "duration": 1260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.logout();\ncy.request({\n  method: \"GET\",\n  url: `${UrlApi}/orders`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401); //  401 (Unauthorized)\n});",
              "err": {},
              "uuid": "8da2d84c-3cc9-4acf-bec3-49699a3b891c",
              "parentUUID": "216d8336-190a-40b3-b0ad-08222c02c061",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a forbidden error when not authorized to view the products from the cart",
              "fullTitle": "API orders test should return a forbidden error when not authorized to view the products from the cart",
              "timedOut": null,
              "duration": 1112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const authToken = \"invalid_token\";\ncy.request({\n  method: \"GET\",\n  url: `${UrlApi}/orders`,\n  headers: {\n    Authorization: `Bearer ${authToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401); // 401 (Unauthorized) vs 403 (Forbidden)\n});",
              "err": {},
              "uuid": "a5cf9637-af91-4f23-ab34-479970e1a475",
              "parentUUID": "216d8336-190a-40b3-b0ad-08222c02c061",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c96b6e6b-8019-4f9a-b27b-8714369ba913",
            "8da2d84c-3cc9-4acf-bec3-49699a3b891c",
            "a5cf9637-af91-4f23-ab34-479970e1a475"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}